# -*- coding: utf-8 -*-
"""궐련담배 성분.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15J9tp2laJpod1mNHrhvjShFHI1CBQKkz

https://m.yna.co.kr/view/AKR20170410169000017
"""

import sys

!sudo add-apt-repository ppa:saiarcot895/chromium-beta
!sudo apt remove chromium-browser
!sudo snap remove chromium
!sudo apt install chromium-browser
!pip3 install selenium
!apt-get update
!apt install chromium-chromedriver
!cp /usr/lib/chromium-browser/chromedriver /usr/bin
sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')

from selenium import webdriver
from selenium.webdriver.common.keys import Keys

options = webdriver.ChromeOptions()
options.add_argument('--headless')
options.add_argument('--no-sandbox')
options.add_argument('--disable-dev-shm-usage')
driver = webdriver.Chrome(options=options)

import pandas as pd

url= 'https://m.yna.co.kr/view/AKR20170410169000017'
driver.get(url)

reTitles= ['구분', '성분명', '함량 단위', '(국내 제품)- ISO', '(국내 제품)- HC']

contents= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[1]/tbody')
contents= contents.text
contents = contents.splitlines()
n= len(contents)

elements = [[None, None, None, None, None] for _ in range(n-2)]

# 구분, 성분명, 함량 단위
for i in range(2, n):
  a= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[1]/tbody/tr[' + str(i+1) + ']/td[1]')

  if a.get_attribute('rowspan'): # 첫 번째 열이 rowspan이면
    row1Value= int(a.get_attribute('rowspan')) # 첫 번째 그룹(2, 7)
    b= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[1]/tbody/tr[' + str(i+1) + ']/td[2]') # (col2, row2)
    cnt1, cnt2= 0, 0
    if b.get_attribute('rowspan'): # 나프탈 아민
      col2Value= int(b.get_attribute('rowspan')) # 두 번째 그룹
      for j in range(col2Value):
        elements[i-2+j][0]=b.text
      c= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[1]/tbody/tr[' + str(i+1) + ']/td[3]').text
      elements[i-2][1], elements[i-2][2]=c[:c.index('(')], c[c.index('(')+1: c.index(')')]
      cnt1+=1
    elif b.get_attribute('colspan'): # 니코틴
      b= b.text
      elements[i-2][0],elements[i-2][1], elements[i-2][2]=b[:b.index('(')], b[:b.index('(')],b[b.index('(')+1: b.index(')')]
      cnt2+=1
  elif a.get_attribute('colspan'):
    if cnt2 == row1Value:
      continue
    cnt2+=1
    a= a.text
    elements[i-2][0],elements[i-2][1], elements[i-2][2] =a[:a.index('(')], a[:a.index('(')], a[a.index('(')+1: a.index(')')]
  else:
    if cnt1 == col2Value:
      continue
    cnt1+=1
    a= a.text
    elements[i-2][1], elements[i-2][2] =a[:a.index('(')], a[a.index('(')+1: a.index(')')]


# (국내 제품)- ISO, (국내 제품)- HC
for i in range(2, n):
  elements[i-2][3]=driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[1]/tbody/tr[' + str(i+1) + ']/td[last()-1]').text
  elements[i-2][4]=driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[1]/tbody/tr[' + str(i+1) + ']/td[last()]').text

re1Df= pd.DataFrame(elements, columns= reTitles)
re1Df

contents2= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[2]/tbody')
contents2= contents2.text
contents2 = contents2.splitlines()
n2= len(contents2) # 40

elements = [[None, None, None, None, None] for _ in range(n2-4)]

for i in range(2, n2-2):
  a= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[2]/tbody/tr[' + str(i+1) + ']/td[1]')
  if a.get_attribute('colspan'):
    a=a.text
    elements[i-2][0],elements[i-2][1], elements[i-2][2]= a[:a.index('(')], a[:a.index('(')], a[a.index('(')+1: a.index(')')]
  elif a.get_attribute('rowspan'):
    rowValue= int(a.get_attribute('rowspan')) # 8
    b= driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[2]/tbody/tr[' + str(i+1) + ']/td[2]').text
    for j in range(rowValue):
      elements[i-2+j][0]= a.text
    elements[i-2][1], elements[i-2][2]=  b[:b.index('(')],b[b.index('(')+1: b.index(')')]
    cnt=0
  else:
    if cnt==rowValue:
      continue
    cnt+=1
    a=a.text
    elements[i-2][1], elements[i-2][2]= a[:a.index('(')], a[a.index('(')+1: a.index(')')]

# (국내 제품)- ISO, (국내 제품)- HC
for i in range(2, n2-2):
  elements[i-2][3]=driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[2]/tbody/tr[' + str(i+1) + ']/td[last()-1]').text
  elements[i-2][4]=driver.find_element('xpath', '//*[@id="articleWrap"]/div/table[2]/tbody/tr[' + str(i+1) + ']/td[last()]').text

re2Df= pd.DataFrame(elements, columns= reTitles)
re2Df